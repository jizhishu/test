# Create your views here.
from django.shortcuts import render_to_response
from django.views.decorators.csrf import csrf_exempt
from models import *
import time,string

@csrf_exempt
def dealsShow(request):
    if request.method == 'POST':
        if request.POST.has_key('delete'):
            dele = request.POST['delete']
            delete(dele)
            find=getDealsbyType()
            return render_to_response('manualdeal.html',{'find':find,'dele':dele})
        if request.POST.has_key('expired'):
            exp = request.POST['expired']
            expiredUpdate(exp)
            find=getDealsbyType()
            return render_to_response('manualdeal.html',{'find':find,'exp':exp})
        #assert False
    else:
        find=getDealsbyType()
        return render_to_response('manualdeal.html',{'find':find})

@csrf_exempt
def dealsInput(request):
    doc={}
    dele=0
    exp=0
    starttime=time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))
    expirationtime=time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()+3600*24*3))
    if request.method == 'POST':   
        #assert False
        post=request.POST
        if request.POST.has_key('ASIN'):
            if request.POST['ASIN']:
                doc={
                     '_id':str(time.time())[0:10]+request.POST['ASIN']+'manual',
                     'ASIN':request.POST['ASIN'],
                     'content':request.POST['content'],
                     'current_price':string.atof(request.POST['current_price']),
                     'last_price':string.atof(request.POST['last_price']),
                     'name':request.POST['name'],
                     'deal_title':request.POST['deal_title'],
                     'start_time':request.POST['start_time'],
                     'expiration_time':request.POST['expiration_time'],
                     'like':0,
                     'dislike':0,
                     'DHI':0,
                     'link':request.POST['link'],
                     'stores':request.POST['stores'],
                     'audiences':request.POST['audiences'],
                     'type':'manual',
                     'expired':False,
                     'img_link':request.POST['img_link'],
                     'category':[request.POST['category']]
                     }
                savelist(doc)
    category=getRootAncestor()
    return render_to_response('manualdealinput.html',{'doc':doc,'category':category,'starttime':starttime,'expirationtime':expirationtime,'post':post})
